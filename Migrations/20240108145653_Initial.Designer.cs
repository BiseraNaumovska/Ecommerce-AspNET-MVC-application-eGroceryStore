// <auto-generated />
using System;
using GradinataNaBabaRatka.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GradinataNaBabaRatka.Migrations
{
    [DbContext(typeof(GradinataNaBabaRatkaContext))]
    [Migration("20240108145653_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GradinataNaBabaRatka.Models.Grad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("GradIme")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("GradinataNaBabaRatka.Models.Kupuvac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AppUser")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProizvodId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProizvodId");

                    b.ToTable("Kupuvac");
                });

            modelBuilder.Entity("GradinataNaBabaRatka.Models.Prodavac", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Prodavac");
                });

            modelBuilder.Entity("GradinataNaBabaRatka.Models.Proizvod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Cena")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Data")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProdavacId")
                        .HasColumnType("int");

                    b.Property<string>("Slika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Zaliha")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdavacId");

                    b.ToTable("Proizvod");
                });

            modelBuilder.Entity("GradinataNaBabaRatka.Models.ProizvodGrad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GradId")
                        .HasColumnType("int");

                    b.Property<int>("ProizvodId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradId");

                    b.HasIndex("ProizvodId");

                    b.ToTable("ProizvodGrad");
                });

            modelBuilder.Entity("GradinataNaBabaRatka.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AppUser")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ProizvodId")
                        .HasColumnType("int");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProizvodId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("GradinataNaBabaRatka.Models.Kupuvac", b =>
                {
                    b.HasOne("GradinataNaBabaRatka.Models.Proizvod", "Proizvod")
                        .WithMany("Kupuvacs")
                        .HasForeignKey("ProizvodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proizvod");
                });

            modelBuilder.Entity("GradinataNaBabaRatka.Models.Proizvod", b =>
                {
                    b.HasOne("GradinataNaBabaRatka.Models.Prodavac", "Prodavac")
                        .WithMany("Proizvods")
                        .HasForeignKey("ProdavacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prodavac");
                });

            modelBuilder.Entity("GradinataNaBabaRatka.Models.ProizvodGrad", b =>
                {
                    b.HasOne("GradinataNaBabaRatka.Models.Grad", "Grad")
                        .WithMany("ProizvodGrads")
                        .HasForeignKey("GradId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GradinataNaBabaRatka.Models.Proizvod", "Proizvod")
                        .WithMany("ProizvodGrads")
                        .HasForeignKey("ProizvodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grad");

                    b.Navigation("Proizvod");
                });

            modelBuilder.Entity("GradinataNaBabaRatka.Models.Review", b =>
                {
                    b.HasOne("GradinataNaBabaRatka.Models.Proizvod", "Proizvod")
                        .WithMany("Reviews")
                        .HasForeignKey("ProizvodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proizvod");
                });

            modelBuilder.Entity("GradinataNaBabaRatka.Models.Grad", b =>
                {
                    b.Navigation("ProizvodGrads");
                });

            modelBuilder.Entity("GradinataNaBabaRatka.Models.Prodavac", b =>
                {
                    b.Navigation("Proizvods");
                });

            modelBuilder.Entity("GradinataNaBabaRatka.Models.Proizvod", b =>
                {
                    b.Navigation("Kupuvacs");

                    b.Navigation("ProizvodGrads");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
